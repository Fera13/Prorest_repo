# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Prorest2.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
import time
import sys
from plyer import notification
from Database import *
import pafy
import vlc


class Ui_MainWindow(QDialog):
    breakChoice = 1
    musicChoice = 1

    def __init__(self):
        super().__init__()
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(806, 603)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(10, 10, 781, 541))
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Triangular)
        self.tabWidget.setElideMode(QtCore.Qt.ElideNone)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.break_bg = QtWidgets.QLabel(self.tab)
        self.break_bg.setGeometry(QtCore.QRect(-6, -25, 781, 571))
        self.break_bg.setText("")
        self.break_bg.setPixmap(QtGui.QPixmap("../Python/BG/ThinkstockPhotos-489763838-e1490767826261.jpg"))
        self.break_bg.setObjectName("break_bg")
        self.break_btn = QtWidgets.QPushButton(self.tab, clicked = lambda: self.break_press())
        self.break_btn.setGeometry(QtCore.QRect(290, 290, 191, 61))
        self.break_btn.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(45, 219, 182, 252), stop:1 rgba(209, 255, 137, 252));\n"
"font: 75 14pt \"Berlin Sans FB Demi\";")
        self.break_btn.setObjectName("break_btn")
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.music_bg = QtWidgets.QLabel(self.tab_2)
        self.music_bg.setGeometry(QtCore.QRect(-270, -40, 1051, 581))
        self.music_bg.setText("")
        self.music_bg.setPixmap(QtGui.QPixmap("../Python/BG/maxresdefault2.jpg"))
        self.music_bg.setObjectName("music_bg")
        self.music_btn = QtWidgets.QPushButton(self.tab_2, clicked = lambda: self.play_music_press())
        self.music_btn.setGeometry(QtCore.QRect(530, 80, 191, 61))
        self.music_btn.setStyleSheet("background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(219, 200, 45, 252), stop:1 rgba(209, 255, 137, 252));\n"
"font: 75 14pt \"Berlin Sans FB Demi\";")
        self.music_btn.setObjectName("music_btn")
        self.tabWidget.addTab(self.tab_2, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 806, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.break_btn.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:12pt; font-weight:600;\">Turn on</span></p></body></html>"))
        self.break_btn.setText(_translate("MainWindow", "Turn on"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Break reminder"))
        self.music_btn.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:12pt; font-weight:600;\">Turn on</span></p></body></html>"))
        self.music_btn.setText(_translate("MainWindow", "Turn on"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Relaxing songs"))

    def break_press(self):
        if self.breakChoice == 1:
            self.break_btn.setText("Turn off")
            self.breakChoice = 2
            WorkerThread.running = True
            self.worker = WorkerThread(1)
            self.worker.start()
        else:
            WorkerThread.running = False
            self.break_btn.setText("Turn on")
            self.breakChoice = 1

    def play_music_press(self):
        if self.musicChoice == 1:
            self.music_btn.setText("Turn off")
            self.musicChoice = 2
            WorkerThread.music = True
            self.worker = WorkerThread(2)
            self.worker.start()
        else:
            WorkerThread.music = False
            self.music_btn.setText("Turn on")
            self.musicChoice = 1

class WorkerThread(QThread):
    running = True
    music = True
    def __init__(self, workerNum):
        super().__init__()
        self.workerNum = workerNum

    def run(self):
        if self.workerNum == 1:
            while self.running:
                notification.notify(title = "It's time for a small break!",
                                    message = "Why don't you stretch a bit, move your body and rest your eyes :)",
                                    app_name = "Prorest",
                                    app_icon = "Meh.ico",
                                    timeout = 60)
                time.sleep(1800)
        
        elif self.workerNum == 2:
            d = Database()
            songs = d.play_songs_order()
            for song in songs:
                while self.music:
                    video = pafy.new(song)
                    best = video.getbestaudio()
                    playurl = best.url
                    instance = vlc.Instance()
                    player = instance.media_player_new()
                    media = instance.media_new(playurl)
                    media.get_mrl()
                    player.set_media(media)
                    player.play()
                    time.sleep(210)
                    player.stop()
                    break


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    MainWindow.show()
    sys.exit(app.exec_())
